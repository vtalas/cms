//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18051
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: System.Data.Mapping.EntityViewGenerationAttribute(typeof(Edm_EntityMappingGeneratedViews.ViewsForBaseEntitySetsCD18876140C474EBBF59E7A6CA68472DE65341FFEAC0729E2F62547A84B0C9D4))]

namespace Edm_EntityMappingGeneratedViews
{
    
    
    /// <Summary>
    /// The type contains views for EntitySets and AssociationSets that were generated at design time.
    /// </Summary>
    public sealed class ViewsForBaseEntitySetsCD18876140C474EBBF59E7A6CA68472DE65341FFEAC0729E2F62547A84B0C9D4 : System.Data.Mapping.EntityViewContainer
    {
        
        /// <Summary>
        /// The constructor stores the views for the extents and also the hash values generated based on the metadata and mapping closure and views.
        /// </Summary>
        public ViewsForBaseEntitySetsCD18876140C474EBBF59E7A6CA68472DE65341FFEAC0729E2F62547A84B0C9D4()
        {
            this.EdmEntityContainerName = "EfContext";
            this.StoreEntityContainerName = "CodeFirstDatabase";
            this.HashOverMappingClosure = "858eeec3341c34cf0147d113b9607b386252ee8a090467e8f7bc4e72ae9bdc77";
            this.HashOverAllExtentViews = "e2e2ec33ea8baf6b663c17870982e1a9119a77afa787ac1f6ddf4983f8709570";
            this.ViewCount = 30;
        }
        
        /// <Summary>
        /// The method returns the view for the index given.
        /// </Summary>
        protected override System.Collections.Generic.KeyValuePair<string, string> GetViewAt(int index)
        {
            if ((index == 0))
            {
                return GetView0();
            }
            if ((index == 1))
            {
                return GetView1();
            }
            if ((index == 2))
            {
                return GetView2();
            }
            if ((index == 3))
            {
                return GetView3();
            }
            if ((index == 4))
            {
                return GetView4();
            }
            if ((index == 5))
            {
                return GetView5();
            }
            if ((index == 6))
            {
                return GetView6();
            }
            if ((index == 7))
            {
                return GetView7();
            }
            if ((index == 8))
            {
                return GetView8();
            }
            if ((index == 9))
            {
                return GetView9();
            }
            if ((index == 10))
            {
                return GetView10();
            }
            if ((index == 11))
            {
                return GetView11();
            }
            if ((index == 12))
            {
                return GetView12();
            }
            if ((index == 13))
            {
                return GetView13();
            }
            if ((index == 14))
            {
                return GetView14();
            }
            if ((index == 15))
            {
                return GetView15();
            }
            if ((index == 16))
            {
                return GetView16();
            }
            if ((index == 17))
            {
                return GetView17();
            }
            if ((index == 18))
            {
                return GetView18();
            }
            if ((index == 19))
            {
                return GetView19();
            }
            if ((index == 20))
            {
                return GetView20();
            }
            if ((index == 21))
            {
                return GetView21();
            }
            if ((index == 22))
            {
                return GetView22();
            }
            if ((index == 23))
            {
                return GetView23();
            }
            if ((index == 24))
            {
                return GetView24();
            }
            if ((index == 25))
            {
                return GetView25();
            }
            if ((index == 26))
            {
                return GetView26();
            }
            if ((index == 27))
            {
                return GetView27();
            }
            if ((index == 28))
            {
                return GetView28();
            }
            if ((index == 29))
            {
                return GetView29();
            }
            throw new System.IndexOutOfRangeException();
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.ApplicationSetting
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView0()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.ApplicationSetting", @"
    SELECT VALUE -- Constructing ApplicationSetting
        [CodeFirstDatabaseSchema.ApplicationSetting](T1.ApplicationSetting_Id, T1.ApplicationSetting_Name, T1.ApplicationSetting_DefaultLanguage)
    FROM (
        SELECT 
            T.Id AS ApplicationSetting_Id, 
            T.Name AS ApplicationSetting_Name, 
            T.DefaultLanguage AS ApplicationSetting_DefaultLanguage, 
            True AS _from0
        FROM EfContext.ApplicationSettings AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.Grid
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.Grid", @"
    SELECT VALUE -- Constructing Grid
        [CodeFirstDatabaseSchema.Grid](T3.Grid_Id, T3.Grid_Home, T3.Grid_Authorize, T3.Grid_Category, T3.[Grid.ApplicationSettings_Id])
    FROM (
        SELECT T1.Grid_Id, T1.Grid_Home, T1.Grid_Authorize, T1.Grid_Category, T2.[Grid.ApplicationSettings_Id], T1._from0, (T2._from1 AND T2._from1 IS NOT NULL) AS _from1
        FROM  (
            SELECT 
                T.Id AS Grid_Id, 
                T.Home AS Grid_Home, 
                T.Authorize AS Grid_Authorize, 
                T.Category AS Grid_Category, 
                True AS _from0
            FROM EfContext.Grids AS T) AS T1
            LEFT OUTER JOIN (
            SELECT 
                Key(T.Grid_ApplicationSettings_Source).Id AS Grid_Id, 
                Key(T.Grid_ApplicationSettings_Target).Id AS [Grid.ApplicationSettings_Id], 
                True AS _from1
            FROM EfContext.Grid_ApplicationSettings AS T) AS T2
            ON T1.Grid_Id = T2.Grid_Id
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.GridElement
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView2()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2226);
            viewString.Append("\r\n    SELECT VALUE -- Constructing GridElement\r\n        [CodeFirstDatabaseSchema");
            viewString.Append(".GridElement](T5.GridElement_Id, T5.GridElement_Width, T5.GridElement_Position, ");
            viewString.Append("T5.GridElement_Content, T5.GridElement_Type, T5.GridElement_Skin, T5.[GridElemen");
            viewString.Append("t.AppliceSetting_Id], T5.[GridElement.Parent_Id], T5.[GridElement.Grid_Id])\r\n   ");
            viewString.Append(" FROM (\r\n        SELECT T1.GridElement_Id, T1.GridElement_Width, T1.GridElement_");
            viewString.Append("Position, T1.GridElement_Content, T1.GridElement_Type, T1.GridElement_Skin, T2.[");
            viewString.Append("GridElement.AppliceSetting_Id], T4.[GridElement.Parent_Id], T3.[GridElement.Grid");
            viewString.Append("_Id], T1._from0, (T2._from1 AND T2._from1 IS NOT NULL) AS _from1, (T4._from2 AND");
            viewString.Append(" T4._from2 IS NOT NULL) AS _from2, (T3._from3 AND T3._from3 IS NOT NULL) AS _fro");
            viewString.Append("m3\r\n        FROM  (\r\n            SELECT \r\n                T.Id AS GridElement_Id");
            viewString.Append(", \r\n                T.Width AS GridElement_Width, \r\n                T.Position A");
            viewString.Append("S GridElement_Position, \r\n                T.Content AS GridElement_Content, \r\n  ");
            viewString.Append("              T.Type AS GridElement_Type, \r\n                T.Skin AS GridElemen");
            viewString.Append("t_Skin, \r\n                True AS _from0\r\n            FROM EfContext.GridElement");
            viewString.Append("s AS T) AS T1\r\n            LEFT OUTER JOIN (\r\n            SELECT \r\n             ");
            viewString.Append("   Key(T.GridElement_AppliceSetting_Source).Id AS GridElement_Id, \r\n            ");
            viewString.Append("    Key(T.GridElement_AppliceSetting_Target).Id AS [GridElement.AppliceSetting_I");
            viewString.Append("d], \r\n                True AS _from1\r\n            FROM EfContext.GridElement_App");
            viewString.Append("liceSetting AS T) AS T2\r\n            ON T1.GridElement_Id = T2.GridElement_Id\r\n ");
            viewString.Append("           LEFT OUTER JOIN (\r\n            SELECT \r\n                Key(T.GridEle");
            viewString.Append("ment_Grid_Source).Id AS GridElement_Id, \r\n                Key(T.GridElement_Grid");
            viewString.Append("_Target).Id AS [GridElement.Grid_Id], \r\n                True AS _from3\r\n        ");
            viewString.Append("    FROM EfContext.GridElement_Grid AS T) AS T3\r\n            ON T1.GridElement_I");
            viewString.Append("d = T3.GridElement_Id\r\n            LEFT OUTER JOIN (\r\n            SELECT \r\n     ");
            viewString.Append("           Key(T.GridElement_Parent_Source).Id AS GridElement_Id, \r\n            ");
            viewString.Append("    Key(T.GridElement_Parent_Target).Id AS [GridElement.Parent_Id], \r\n          ");
            viewString.Append("      True AS _from2\r\n            FROM EfContext.GridElement_Parent AS T) AS T4\r");
            viewString.Append("\n            ON T1.GridElement_Id = T4.GridElement_Id\r\n    ) AS T5");
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.GridElement", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.Resource
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView3()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.Resource", "\r\n    SELECT VALUE -- Constructing Resource\r\n        [CodeFirstDatabaseSchema.Res" +
                    "ource](T4.Resource_Id, T4.Resource_Culture, T4.Resource_Key, T4.Resource_Value, " +
                    "T4.Resource_Owner, T4.[Resource.GridElement_Id], T4.[Resource.Grid_Id])\r\n    FRO" +
                    "M (\r\n        SELECT T1.Resource_Id, T1.Resource_Culture, T1.Resource_Key, T1.Res" +
                    "ource_Value, T1.Resource_Owner, T2.[Resource.GridElement_Id], T3.[Resource.Grid_" +
                    "Id], T1._from0, (T2._from1 AND T2._from1 IS NOT NULL) AS _from1, (T3._from2 AND " +
                    "T3._from2 IS NOT NULL) AS _from2\r\n        FROM  (\r\n            SELECT \r\n        " +
                    "        T.Id AS Resource_Id, \r\n                T.Culture AS Resource_Culture, \r\n" +
                    "                T.[Key] AS Resource_Key, \r\n                T.[Value] AS Resource" +
                    "_Value, \r\n                T.Owner AS Resource_Owner, \r\n                True AS _" +
                    "from0\r\n            FROM EfContext.Resources AS T) AS T1\r\n            LEFT OUTER " +
                    "JOIN (\r\n            SELECT \r\n                Key(T.GridElement_Resources_Target)" +
                    ".Id AS Resource_Id, \r\n                Key(T.GridElement_Resources_Source).Id AS " +
                    "[Resource.GridElement_Id], \r\n                True AS _from1\r\n            FROM Ef" +
                    "Context.GridElement_Resources AS T) AS T2\r\n            ON T1.Resource_Id = T2.Re" +
                    "source_Id\r\n            LEFT OUTER JOIN (\r\n            SELECT \r\n                K" +
                    "ey(T.Grid_Resources_Target).Id AS Resource_Id, \r\n                Key(T.Grid_Reso" +
                    "urces_Source).Id AS [Resource.Grid_Id], \r\n                True AS _from2\r\n      " +
                    "      FROM EfContext.Grid_Resources AS T) AS T3\r\n            ON T1.Resource_Id =" +
                    " T3.Resource_Id\r\n    ) AS T4");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.GridElementGroup
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView4()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.GridElementGroup", @"
    SELECT VALUE -- Constructing GridElementGroup
        [CodeFirstDatabaseSchema.GridElementGroup](T4.GridElementGroup_Id, T4.[GridElementGroup.Name_Id], T4.[GridElementGroup.GridElement_Id])
    FROM (
        SELECT T1.GridElementGroup_Id, T3.[GridElementGroup.Name_Id], T2.[GridElementGroup.GridElement_Id], (T3._from0 AND T3._from0 IS NOT NULL) AS _from0, (T2._from1 AND T2._from1 IS NOT NULL) AS _from1, T1._from2
        FROM  (
            SELECT 
                T.Id AS GridElementGroup_Id, 
                True AS _from2
            FROM EfContext.GridElementGroup AS T) AS T1
            LEFT OUTER JOIN (
            SELECT 
                Key(T.GridElement_Groups_Target).Id AS GridElementGroup_Id, 
                Key(T.GridElement_Groups_Source).Id AS [GridElementGroup.GridElement_Id], 
                True AS _from1
            FROM EfContext.GridElement_Groups AS T) AS T2
            ON T1.GridElementGroup_Id = T2.GridElementGroup_Id
            LEFT OUTER JOIN (
            SELECT 
                Key(T.GridElementGroup_Name_Source).Id AS GridElementGroup_Id, 
                Key(T.GridElementGroup_Name_Target).Id AS [GridElementGroup.Name_Id], 
                True AS _from0
            FROM EfContext.GridElementGroup_Name AS T) AS T3
            ON T1.GridElementGroup_Id = T3.GridElementGroup_Id
    ) AS T4");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.UserProfile
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView5()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.UserProfile", @"
    SELECT VALUE -- Constructing UserProfile
        [CodeFirstDatabaseSchema.UserProfile](T1.UserProfile_Id, T1.UserProfile_UserName, T1.UserProfile_ApplicationUser, T1.UserProfile_AccessToken, T1.UserProfile_Expire, T1.UserProfile_RefreshToken)
    FROM (
        SELECT 
            T.Id AS UserProfile_Id, 
            T.UserName AS UserProfile_UserName, 
            T.ApplicationUser AS UserProfile_ApplicationUser, 
            T.AccessToken AS UserProfile_AccessToken, 
            T.Expire AS UserProfile_Expire, 
            T.RefreshToken AS UserProfile_RefreshToken, 
            True AS _from0
        FROM EfContext.UserProfile AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.ApplicationSettingStorage
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView6()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.ApplicationSettingStorage", @"
    SELECT VALUE -- Constructing ApplicationSettingStorage
        [CodeFirstDatabaseSchema.ApplicationSettingStorage](T3.ApplicationSettingStorage_Id, T3.ApplicationSettingStorage_Key, T3.ApplicationSettingStorage_Value, T3.[ApplicationSettingStorage.AppliceSetting_Id])
    FROM (
        SELECT T1.ApplicationSettingStorage_Id, T1.ApplicationSettingStorage_Key, T1.ApplicationSettingStorage_Value, T2.[ApplicationSettingStorage.AppliceSetting_Id], T1._from0, (T2._from1 AND T2._from1 IS NOT NULL) AS _from1
        FROM  (
            SELECT 
                T.Id AS ApplicationSettingStorage_Id, 
                T.[Key] AS ApplicationSettingStorage_Key, 
                T.[Value] AS ApplicationSettingStorage_Value, 
                True AS _from0
            FROM EfContext.ApplicationSettingStorage AS T) AS T1
            LEFT OUTER JOIN (
            SELECT 
                Key(T.ApplicationSettingStorage_AppliceSetting_Source).Id AS ApplicationSettingStorage_Id, 
                Key(T.ApplicationSettingStorage_AppliceSetting_Target).Id AS [ApplicationSettingStorage.AppliceSetting_Id], 
                True AS _from1
            FROM EfContext.ApplicationSettingStorage_AppliceSetting AS T) AS T2
            ON T1.ApplicationSettingStorage_Id = T2.ApplicationSettingStorage_Id
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.UserData
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView7()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.UserData", @"
    SELECT VALUE -- Constructing UserData
        [CodeFirstDatabaseSchema.UserData](T3.UserData_Id, T3.UserData_Key, T3.UserData_Value, T3.UserData_Created, T3.[UserData.User_Id])
    FROM (
        SELECT T1.UserData_Id, T1.UserData_Key, T1.UserData_Value, T1.UserData_Created, T2.[UserData.User_Id], T1._from0, (T2._from1 AND T2._from1 IS NOT NULL) AS _from1
        FROM  (
            SELECT 
                T.Id AS UserData_Id, 
                T.[Key] AS UserData_Key, 
                T.[Value] AS UserData_Value, 
                T.Created AS UserData_Created, 
                True AS _from0
            FROM EfContext.UserData AS T) AS T1
            LEFT OUTER JOIN (
            SELECT 
                Key(T.UserData_User_Source).Id AS UserData_Id, 
                Key(T.UserData_User_Target).Id AS [UserData.User_Id], 
                True AS _from1
            FROM EfContext.UserData_User AS T) AS T2
            ON T1.UserData_Id = T2.UserData_Id
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.UserProfileApplicationSetting
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView8()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.UserProfileApplicationSetting", @"
    SELECT VALUE -- Constructing UserProfileApplicationSetting
        [CodeFirstDatabaseSchema.UserProfileApplicationSetting](T1.[UserProfileApplicationSetting.UserProfile_Id], T1.[UserProfileApplicationSetting.ApplicationSetting_Id])
    FROM (
        SELECT 
            Key(T.UserProfile_Applications_Source).Id AS [UserProfileApplicationSetting.UserProfile_Id], 
            Key(T.UserProfile_Applications_Target).Id AS [UserProfileApplicationSetting.ApplicationSetting_Id], 
            True AS _from0
        FROM EfContext.UserProfile_Applications AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EfContext.ApplicationSettings
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView9()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EfContext.ApplicationSettings", @"
    SELECT VALUE -- Constructing ApplicationSettings
        [cms.data.EF.ApplicationSetting](T1.ApplicationSetting_Id, T1.ApplicationSetting_Name, T1.ApplicationSetting_DefaultLanguage)
    FROM (
        SELECT 
            T.Id AS ApplicationSetting_Id, 
            T.Name AS ApplicationSetting_Name, 
            T.DefaultLanguage AS ApplicationSetting_DefaultLanguage, 
            True AS _from0
        FROM CodeFirstDatabase.ApplicationSetting AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EfContext.Grids
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView10()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EfContext.Grids", @"
    SELECT VALUE -- Constructing Grids
        [cms.data.EF.Grid](T1.Grid_Id, T1.Grid_Home, T1.Grid_Authorize, T1.Grid_Category) WITH 
        RELATIONSHIP(CREATEREF(EfContext.ApplicationSettings, ROW(T1.[Grid_ApplicationSettings.Grid_ApplicationSettings_Target.Id]),[cms.data.EF.ApplicationSetting]),[cms.data.EF.Grid_ApplicationSettings],Grid_ApplicationSettings_Source,Grid_ApplicationSettings_Target) 
    FROM (
        SELECT 
            T.Id AS Grid_Id, 
            T.Home AS Grid_Home, 
            T.Authorize AS Grid_Authorize, 
            T.Category AS Grid_Category, 
            True AS _from0, 
            T.ApplicationSettings_Id AS [Grid_ApplicationSettings.Grid_ApplicationSettings_Target.Id]
        FROM CodeFirstDatabase.Grid AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EfContext.GridElements
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView11()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EfContext.GridElements", "\r\n    SELECT VALUE -- Constructing GridElements\r\n        [cms.data.EF.GridElement" +
                    "](T1.GridElement_Id, T1.GridElement_Width, T1.GridElement_Position, T1.GridEleme" +
                    "nt_Content, T1.GridElement_Type, T1.GridElement_Skin) WITH \r\n        RELATIONSHI" +
                    "P(CREATEREF(EfContext.ApplicationSettings, ROW(T1.[GridElement_AppliceSetting.Gr" +
                    "idElement_AppliceSetting_Target.Id]),[cms.data.EF.ApplicationSetting]),[cms.data" +
                    ".EF.GridElement_AppliceSetting],GridElement_AppliceSetting_Source,GridElement_Ap" +
                    "pliceSetting_Target) \r\n        RELATIONSHIP(CREATEREF(EfContext.GridElements, RO" +
                    "W(T1.[GridElement_Parent.GridElement_Parent_Target.Id]),[cms.data.EF.GridElement" +
                    "]),[cms.data.EF.GridElement_Parent],GridElement_Parent_Source,GridElement_Parent" +
                    "_Target) \r\n        RELATIONSHIP(CREATEREF(EfContext.Grids, ROW(T1.[GridElement_G" +
                    "rid.GridElement_Grid_Target.Id]),[cms.data.EF.Grid]),[cms.data.EF.GridElement_Gr" +
                    "id],GridElement_Grid_Source,GridElement_Grid_Target) \r\n    FROM (\r\n        SELEC" +
                    "T \r\n            T.Id AS GridElement_Id, \r\n            T.Width AS GridElement_Wid" +
                    "th, \r\n            T.Position AS GridElement_Position, \r\n            T.Content AS" +
                    " GridElement_Content, \r\n            T.Type AS GridElement_Type, \r\n            T." +
                    "Skin AS GridElement_Skin, \r\n            True AS _from0, \r\n            T.AppliceS" +
                    "etting_Id AS [GridElement_AppliceSetting.GridElement_AppliceSetting_Target.Id], " +
                    "\r\n            T.Parent_Id AS [GridElement_Parent.GridElement_Parent_Target.Id], " +
                    "\r\n            T.Grid_Id AS [GridElement_Grid.GridElement_Grid_Target.Id]\r\n      " +
                    "  FROM CodeFirstDatabase.GridElement AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EfContext.Resources
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView12()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EfContext.Resources", @"
    SELECT VALUE -- Constructing Resources
        [cms.data.EF.Resource](T1.Resource_Id, T1.Resource_Culture, T1.Resource_Key, T1.Resource_Value, T1.Resource_Owner) WITH 
        RELATIONSHIP(CREATEREF(EfContext.GridElements, ROW(T1.[GridElement_Resources.GridElement_Resources_Source.Id]),[cms.data.EF.GridElement]),[cms.data.EF.GridElement_Resources],GridElement_Resources_Target,GridElement_Resources_Source) 
        RELATIONSHIP(CREATEREF(EfContext.Grids, ROW(T1.[Grid_Resources.Grid_Resources_Source.Id]),[cms.data.EF.Grid]),[cms.data.EF.Grid_Resources],Grid_Resources_Target,Grid_Resources_Source) 
    FROM (
        SELECT 
            T.Id AS Resource_Id, 
            T.Culture AS Resource_Culture, 
            T.[Key] AS Resource_Key, 
            T.[Value] AS Resource_Value, 
            T.Owner AS Resource_Owner, 
            True AS _from0, 
            T.GridElement_Id AS [GridElement_Resources.GridElement_Resources_Source.Id], 
            T.Grid_Id AS [Grid_Resources.Grid_Resources_Source.Id]
        FROM CodeFirstDatabase.Resource AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EfContext.GridElementGroup
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView13()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EfContext.GridElementGroup", @"
    SELECT VALUE -- Constructing GridElementGroup
        [cms.data.EF.GridElementGroup](T1.GridElementGroup_Id) WITH 
        RELATIONSHIP(CREATEREF(EfContext.Resources, ROW(T1.[GridElementGroup_Name.GridElementGroup_Name_Target.Id]),[cms.data.EF.Resource]),[cms.data.EF.GridElementGroup_Name],GridElementGroup_Name_Source,GridElementGroup_Name_Target) 
        RELATIONSHIP(CREATEREF(EfContext.GridElements, ROW(T1.[GridElement_Groups.GridElement_Groups_Source.Id]),[cms.data.EF.GridElement]),[cms.data.EF.GridElement_Groups],GridElement_Groups_Target,GridElement_Groups_Source) 
    FROM (
        SELECT 
            T.Id AS GridElementGroup_Id, 
            True AS _from0, 
            T.Name_Id AS [GridElementGroup_Name.GridElementGroup_Name_Target.Id], 
            T.GridElement_Id AS [GridElement_Groups.GridElement_Groups_Source.Id]
        FROM CodeFirstDatabase.GridElementGroup AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EfContext.UserProfile
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView14()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EfContext.UserProfile", @"
    SELECT VALUE -- Constructing UserProfile
        [cms.data.EF.UserProfile](T1.UserProfile_Id, T1.UserProfile_UserName, T1.UserProfile_ApplicationUser, T1.UserProfile_AccessToken, T1.UserProfile_Expire, T1.UserProfile_RefreshToken)
    FROM (
        SELECT 
            T.Id AS UserProfile_Id, 
            T.UserName AS UserProfile_UserName, 
            T.ApplicationUser AS UserProfile_ApplicationUser, 
            T.AccessToken AS UserProfile_AccessToken, 
            T.Expire AS UserProfile_Expire, 
            T.RefreshToken AS UserProfile_RefreshToken, 
            True AS _from0
        FROM CodeFirstDatabase.UserProfile AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EfContext.ApplicationSettingStorage
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView15()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EfContext.ApplicationSettingStorage", @"
    SELECT VALUE -- Constructing ApplicationSettingStorage
        [cms.data.EF.ApplicationSettingStorage](T1.ApplicationSettingStorage_Id, T1.ApplicationSettingStorage_Key, T1.ApplicationSettingStorage_Value) WITH 
        RELATIONSHIP(CREATEREF(EfContext.ApplicationSettings, ROW(T1.[ApplicationSettingStorage_AppliceSetting.ApplicationSettingStorage_AppliceSetting_Target.Id]),[cms.data.EF.ApplicationSetting]),[cms.data.EF.ApplicationSettingStorage_AppliceSetting],ApplicationSettingStorage_AppliceSetting_Source,ApplicationSettingStorage_AppliceSetting_Target) 
    FROM (
        SELECT 
            T.Id AS ApplicationSettingStorage_Id, 
            T.[Key] AS ApplicationSettingStorage_Key, 
            T.[Value] AS ApplicationSettingStorage_Value, 
            True AS _from0, 
            T.AppliceSetting_Id AS [ApplicationSettingStorage_AppliceSetting.ApplicationSettingStorage_AppliceSetting_Target.Id]
        FROM CodeFirstDatabase.ApplicationSettingStorage AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EfContext.UserData
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView16()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EfContext.UserData", @"
    SELECT VALUE -- Constructing UserData
        [cms.data.EF.UserData](T1.UserData_Id, T1.UserData_Key, T1.UserData_Value, T1.UserData_Created) WITH 
        RELATIONSHIP(CREATEREF(EfContext.UserProfile, ROW(T1.[UserData_User.UserData_User_Target.Id]),[cms.data.EF.UserProfile]),[cms.data.EF.UserData_User],UserData_User_Source,UserData_User_Target) 
    FROM (
        SELECT 
            T.Id AS UserData_Id, 
            T.[Key] AS UserData_Key, 
            T.[Value] AS UserData_Value, 
            T.Created AS UserData_Created, 
            True AS _from0, 
            T.User_Id AS [UserData_User.UserData_User_Target.Id]
        FROM CodeFirstDatabase.UserData AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EfContext.Grid_ApplicationSettings
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView17()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EfContext.Grid_ApplicationSettings", @"
    SELECT VALUE -- Constructing Grid_ApplicationSettings
        [cms.data.EF.Grid_ApplicationSettings](T3.[Grid_ApplicationSettings.Grid_ApplicationSettings_Source], T3.[Grid_ApplicationSettings.Grid_ApplicationSettings_Target])
    FROM (
        SELECT -- Constructing Grid_ApplicationSettings_Source
            CreateRef(EfContext.Grids, row(T2.[Grid_ApplicationSettings.Grid_ApplicationSettings_Source.Id]), [cms.data.EF.Grid]) AS [Grid_ApplicationSettings.Grid_ApplicationSettings_Source], 
            T2.[Grid_ApplicationSettings.Grid_ApplicationSettings_Target]
        FROM (
            SELECT -- Constructing Grid_ApplicationSettings_Target
                T1.[Grid_ApplicationSettings.Grid_ApplicationSettings_Source.Id], 
                CreateRef(EfContext.ApplicationSettings, row(T1.[Grid_ApplicationSettings.Grid_ApplicationSettings_Target.Id]), [cms.data.EF.ApplicationSetting]) AS [Grid_ApplicationSettings.Grid_ApplicationSettings_Target]
            FROM (
                SELECT 
                    T.Id AS [Grid_ApplicationSettings.Grid_ApplicationSettings_Source.Id], 
                    T.ApplicationSettings_Id AS [Grid_ApplicationSettings.Grid_ApplicationSettings_Target.Id], 
                    True AS _from0
                FROM CodeFirstDatabase.Grid AS T
                WHERE T.ApplicationSettings_Id IS NOT NULL
            ) AS T1
        ) AS T2
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for EfContext.GridElement_AppliceSetting
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView18()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EfContext.GridElement_AppliceSetting", @"
    SELECT VALUE -- Constructing GridElement_AppliceSetting
        [cms.data.EF.GridElement_AppliceSetting](T3.[GridElement_AppliceSetting.GridElement_AppliceSetting_Source], T3.[GridElement_AppliceSetting.GridElement_AppliceSetting_Target])
    FROM (
        SELECT -- Constructing GridElement_AppliceSetting_Source
            CreateRef(EfContext.GridElements, row(T2.[GridElement_AppliceSetting.GridElement_AppliceSetting_Source.Id]), [cms.data.EF.GridElement]) AS [GridElement_AppliceSetting.GridElement_AppliceSetting_Source], 
            T2.[GridElement_AppliceSetting.GridElement_AppliceSetting_Target]
        FROM (
            SELECT -- Constructing GridElement_AppliceSetting_Target
                T1.[GridElement_AppliceSetting.GridElement_AppliceSetting_Source.Id], 
                CreateRef(EfContext.ApplicationSettings, row(T1.[GridElement_AppliceSetting.GridElement_AppliceSetting_Target.Id]), [cms.data.EF.ApplicationSetting]) AS [GridElement_AppliceSetting.GridElement_AppliceSetting_Target]
            FROM (
                SELECT 
                    T.Id AS [GridElement_AppliceSetting.GridElement_AppliceSetting_Source.Id], 
                    T.AppliceSetting_Id AS [GridElement_AppliceSetting.GridElement_AppliceSetting_Target.Id], 
                    True AS _from0
                FROM CodeFirstDatabase.GridElement AS T
                WHERE T.AppliceSetting_Id IS NOT NULL
            ) AS T1
        ) AS T2
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for EfContext.GridElement_Parent
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView19()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EfContext.GridElement_Parent", @"
    SELECT VALUE -- Constructing GridElement_Parent
        [cms.data.EF.GridElement_Parent](T3.[GridElement_Parent.GridElement_Parent_Source], T3.[GridElement_Parent.GridElement_Parent_Target])
    FROM (
        SELECT -- Constructing GridElement_Parent_Source
            CreateRef(EfContext.GridElements, row(T2.[GridElement_Parent.GridElement_Parent_Source.Id]), [cms.data.EF.GridElement]) AS [GridElement_Parent.GridElement_Parent_Source], 
            T2.[GridElement_Parent.GridElement_Parent_Target]
        FROM (
            SELECT -- Constructing GridElement_Parent_Target
                T1.[GridElement_Parent.GridElement_Parent_Source.Id], 
                CreateRef(EfContext.GridElements, row(T1.[GridElement_Parent.GridElement_Parent_Target.Id]), [cms.data.EF.GridElement]) AS [GridElement_Parent.GridElement_Parent_Target]
            FROM (
                SELECT 
                    T.Id AS [GridElement_Parent.GridElement_Parent_Source.Id], 
                    T.Parent_Id AS [GridElement_Parent.GridElement_Parent_Target.Id], 
                    True AS _from0
                FROM CodeFirstDatabase.GridElement AS T
                WHERE T.Parent_Id IS NOT NULL
            ) AS T1
        ) AS T2
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for EfContext.GridElement_Grid
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView20()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EfContext.GridElement_Grid", @"
    SELECT VALUE -- Constructing GridElement_Grid
        [cms.data.EF.GridElement_Grid](T3.[GridElement_Grid.GridElement_Grid_Source], T3.[GridElement_Grid.GridElement_Grid_Target])
    FROM (
        SELECT -- Constructing GridElement_Grid_Source
            CreateRef(EfContext.GridElements, row(T2.[GridElement_Grid.GridElement_Grid_Source.Id]), [cms.data.EF.GridElement]) AS [GridElement_Grid.GridElement_Grid_Source], 
            T2.[GridElement_Grid.GridElement_Grid_Target]
        FROM (
            SELECT -- Constructing GridElement_Grid_Target
                T1.[GridElement_Grid.GridElement_Grid_Source.Id], 
                CreateRef(EfContext.Grids, row(T1.[GridElement_Grid.GridElement_Grid_Target.Id]), [cms.data.EF.Grid]) AS [GridElement_Grid.GridElement_Grid_Target]
            FROM (
                SELECT 
                    T.Id AS [GridElement_Grid.GridElement_Grid_Source.Id], 
                    T.Grid_Id AS [GridElement_Grid.GridElement_Grid_Target.Id], 
                    True AS _from0
                FROM CodeFirstDatabase.GridElement AS T
                WHERE T.Grid_Id IS NOT NULL
            ) AS T1
        ) AS T2
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for EfContext.GridElement_Resources
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView21()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EfContext.GridElement_Resources", @"
    SELECT VALUE -- Constructing GridElement_Resources
        [cms.data.EF.GridElement_Resources](T3.[GridElement_Resources.GridElement_Resources_Source], T3.[GridElement_Resources.GridElement_Resources_Target])
    FROM (
        SELECT -- Constructing GridElement_Resources_Source
            CreateRef(EfContext.GridElements, row(T2.[GridElement_Resources.GridElement_Resources_Source.Id]), [cms.data.EF.GridElement]) AS [GridElement_Resources.GridElement_Resources_Source], 
            T2.[GridElement_Resources.GridElement_Resources_Target]
        FROM (
            SELECT -- Constructing GridElement_Resources_Target
                T1.[GridElement_Resources.GridElement_Resources_Source.Id], 
                CreateRef(EfContext.Resources, row(T1.[GridElement_Resources.GridElement_Resources_Target.Id]), [cms.data.EF.Resource]) AS [GridElement_Resources.GridElement_Resources_Target]
            FROM (
                SELECT 
                    T.GridElement_Id AS [GridElement_Resources.GridElement_Resources_Source.Id], 
                    T.Id AS [GridElement_Resources.GridElement_Resources_Target.Id], 
                    True AS _from0
                FROM CodeFirstDatabase.Resource AS T
                WHERE T.GridElement_Id IS NOT NULL
            ) AS T1
        ) AS T2
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for EfContext.GridElementGroup_Name
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView22()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EfContext.GridElementGroup_Name", @"
    SELECT VALUE -- Constructing GridElementGroup_Name
        [cms.data.EF.GridElementGroup_Name](T3.[GridElementGroup_Name.GridElementGroup_Name_Source], T3.[GridElementGroup_Name.GridElementGroup_Name_Target])
    FROM (
        SELECT -- Constructing GridElementGroup_Name_Source
            CreateRef(EfContext.GridElementGroup, row(T2.[GridElementGroup_Name.GridElementGroup_Name_Source.Id]), [cms.data.EF.GridElementGroup]) AS [GridElementGroup_Name.GridElementGroup_Name_Source], 
            T2.[GridElementGroup_Name.GridElementGroup_Name_Target]
        FROM (
            SELECT -- Constructing GridElementGroup_Name_Target
                T1.[GridElementGroup_Name.GridElementGroup_Name_Source.Id], 
                CreateRef(EfContext.Resources, row(T1.[GridElementGroup_Name.GridElementGroup_Name_Target.Id]), [cms.data.EF.Resource]) AS [GridElementGroup_Name.GridElementGroup_Name_Target]
            FROM (
                SELECT 
                    T.Id AS [GridElementGroup_Name.GridElementGroup_Name_Source.Id], 
                    T.Name_Id AS [GridElementGroup_Name.GridElementGroup_Name_Target.Id], 
                    True AS _from0
                FROM CodeFirstDatabase.GridElementGroup AS T
                WHERE T.Name_Id IS NOT NULL
            ) AS T1
        ) AS T2
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for EfContext.GridElement_Groups
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView23()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EfContext.GridElement_Groups", @"
    SELECT VALUE -- Constructing GridElement_Groups
        [cms.data.EF.GridElement_Groups](T3.[GridElement_Groups.GridElement_Groups_Source], T3.[GridElement_Groups.GridElement_Groups_Target])
    FROM (
        SELECT -- Constructing GridElement_Groups_Source
            CreateRef(EfContext.GridElements, row(T2.[GridElement_Groups.GridElement_Groups_Source.Id]), [cms.data.EF.GridElement]) AS [GridElement_Groups.GridElement_Groups_Source], 
            T2.[GridElement_Groups.GridElement_Groups_Target]
        FROM (
            SELECT -- Constructing GridElement_Groups_Target
                T1.[GridElement_Groups.GridElement_Groups_Source.Id], 
                CreateRef(EfContext.GridElementGroup, row(T1.[GridElement_Groups.GridElement_Groups_Target.Id]), [cms.data.EF.GridElementGroup]) AS [GridElement_Groups.GridElement_Groups_Target]
            FROM (
                SELECT 
                    T.GridElement_Id AS [GridElement_Groups.GridElement_Groups_Source.Id], 
                    T.Id AS [GridElement_Groups.GridElement_Groups_Target.Id], 
                    True AS _from0
                FROM CodeFirstDatabase.GridElementGroup AS T
                WHERE T.GridElement_Id IS NOT NULL
            ) AS T1
        ) AS T2
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for EfContext.Grid_Resources
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView24()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EfContext.Grid_Resources", @"
    SELECT VALUE -- Constructing Grid_Resources
        [cms.data.EF.Grid_Resources](T3.[Grid_Resources.Grid_Resources_Source], T3.[Grid_Resources.Grid_Resources_Target])
    FROM (
        SELECT -- Constructing Grid_Resources_Source
            CreateRef(EfContext.Grids, row(T2.[Grid_Resources.Grid_Resources_Source.Id]), [cms.data.EF.Grid]) AS [Grid_Resources.Grid_Resources_Source], 
            T2.[Grid_Resources.Grid_Resources_Target]
        FROM (
            SELECT -- Constructing Grid_Resources_Target
                T1.[Grid_Resources.Grid_Resources_Source.Id], 
                CreateRef(EfContext.Resources, row(T1.[Grid_Resources.Grid_Resources_Target.Id]), [cms.data.EF.Resource]) AS [Grid_Resources.Grid_Resources_Target]
            FROM (
                SELECT 
                    T.Grid_Id AS [Grid_Resources.Grid_Resources_Source.Id], 
                    T.Id AS [Grid_Resources.Grid_Resources_Target.Id], 
                    True AS _from0
                FROM CodeFirstDatabase.Resource AS T
                WHERE T.Grid_Id IS NOT NULL
            ) AS T1
        ) AS T2
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for EfContext.UserProfile_Applications
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView25()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EfContext.UserProfile_Applications", @"
    SELECT VALUE -- Constructing UserProfile_Applications
        [cms.data.EF.UserProfile_Applications](T3.[UserProfile_Applications.UserProfile_Applications_Source], T3.[UserProfile_Applications.UserProfile_Applications_Target])
    FROM (
        SELECT -- Constructing UserProfile_Applications_Source
            CreateRef(EfContext.UserProfile, row(T2.[UserProfile_Applications.UserProfile_Applications_Source.Id]), [cms.data.EF.UserProfile]) AS [UserProfile_Applications.UserProfile_Applications_Source], 
            T2.[UserProfile_Applications.UserProfile_Applications_Target]
        FROM (
            SELECT -- Constructing UserProfile_Applications_Target
                T1.[UserProfile_Applications.UserProfile_Applications_Source.Id], 
                CreateRef(EfContext.ApplicationSettings, row(T1.[UserProfile_Applications.UserProfile_Applications_Target.Id]), [cms.data.EF.ApplicationSetting]) AS [UserProfile_Applications.UserProfile_Applications_Target]
            FROM (
                SELECT 
                    T.UserProfile_Id AS [UserProfile_Applications.UserProfile_Applications_Source.Id], 
                    T.ApplicationSetting_Id AS [UserProfile_Applications.UserProfile_Applications_Target.Id], 
                    True AS _from0
                FROM CodeFirstDatabase.UserProfileApplicationSetting AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for EfContext.ApplicationSettingStorage_AppliceSetting
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView26()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EfContext.ApplicationSettingStorage_AppliceSetting", "\r\n    SELECT VALUE -- Constructing ApplicationSettingStorage_AppliceSetting\r\n    " +
                    "    [cms.data.EF.ApplicationSettingStorage_AppliceSetting](T3.[ApplicationSettin" +
                    "gStorage_AppliceSetting.ApplicationSettingStorage_AppliceSetting_Source], T3.[Ap" +
                    "plicationSettingStorage_AppliceSetting.ApplicationSettingStorage_AppliceSetting_" +
                    "Target])\r\n    FROM (\r\n        SELECT -- Constructing ApplicationSettingStorage_A" +
                    "ppliceSetting_Source\r\n            CreateRef(EfContext.ApplicationSettingStorage," +
                    " row(T2.[ApplicationSettingStorage_AppliceSetting.ApplicationSettingStorage_Appl" +
                    "iceSetting_Source.Id]), [cms.data.EF.ApplicationSettingStorage]) AS [Application" +
                    "SettingStorage_AppliceSetting.ApplicationSettingStorage_AppliceSetting_Source], " +
                    "\r\n            T2.[ApplicationSettingStorage_AppliceSetting.ApplicationSettingSto" +
                    "rage_AppliceSetting_Target]\r\n        FROM (\r\n            SELECT -- Constructing " +
                    "ApplicationSettingStorage_AppliceSetting_Target\r\n                T1.[Application" +
                    "SettingStorage_AppliceSetting.ApplicationSettingStorage_AppliceSetting_Source.Id" +
                    "], \r\n                CreateRef(EfContext.ApplicationSettings, row(T1.[Applicatio" +
                    "nSettingStorage_AppliceSetting.ApplicationSettingStorage_AppliceSetting_Target.I" +
                    "d]), [cms.data.EF.ApplicationSetting]) AS [ApplicationSettingStorage_AppliceSett" +
                    "ing.ApplicationSettingStorage_AppliceSetting_Target]\r\n            FROM (\r\n      " +
                    "          SELECT \r\n                    T.Id AS [ApplicationSettingStorage_Applic" +
                    "eSetting.ApplicationSettingStorage_AppliceSetting_Source.Id], \r\n                " +
                    "    T.AppliceSetting_Id AS [ApplicationSettingStorage_AppliceSetting.Application" +
                    "SettingStorage_AppliceSetting_Target.Id], \r\n                    True AS _from0\r\n" +
                    "                FROM CodeFirstDatabase.ApplicationSettingStorage AS T\r\n         " +
                    "       WHERE T.AppliceSetting_Id IS NOT NULL\r\n            ) AS T1\r\n        ) AS " +
                    "T2\r\n    ) AS T3");
        }
        
        /// <Summary>
        /// return view for EfContext.UserData_User
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView27()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EfContext.UserData_User", @"
    SELECT VALUE -- Constructing UserData_User
        [cms.data.EF.UserData_User](T3.[UserData_User.UserData_User_Source], T3.[UserData_User.UserData_User_Target])
    FROM (
        SELECT -- Constructing UserData_User_Source
            CreateRef(EfContext.UserData, row(T2.[UserData_User.UserData_User_Source.Id]), [cms.data.EF.UserData]) AS [UserData_User.UserData_User_Source], 
            T2.[UserData_User.UserData_User_Target]
        FROM (
            SELECT -- Constructing UserData_User_Target
                T1.[UserData_User.UserData_User_Source.Id], 
                CreateRef(EfContext.UserProfile, row(T1.[UserData_User.UserData_User_Target.Id]), [cms.data.EF.UserProfile]) AS [UserData_User.UserData_User_Target]
            FROM (
                SELECT 
                    T.Id AS [UserData_User.UserData_User_Source.Id], 
                    T.User_Id AS [UserData_User.UserData_User_Target.Id], 
                    True AS _from0
                FROM CodeFirstDatabase.UserData AS T
                WHERE T.User_Id IS NOT NULL
            ) AS T1
        ) AS T2
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.TemplateType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView28()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.TemplateType", @"
    SELECT VALUE -- Constructing TemplateType
        [CodeFirstDatabaseSchema.TemplateType](T1.TemplateType_Id, T1.TemplateType_Name)
    FROM (
        SELECT 
            T.Id AS TemplateType_Id, 
            T.Name AS TemplateType_Name, 
            True AS _from0
        FROM EfContext.TemplateTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EfContext.TemplateTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView29()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EfContext.TemplateTypes", @"
    SELECT VALUE -- Constructing TemplateTypes
        [cms.data.EF.TemplateType](T1.TemplateType_Id, T1.TemplateType_Name)
    FROM (
        SELECT 
            T.Id AS TemplateType_Id, 
            T.Name AS TemplateType_Name, 
            True AS _from0
        FROM CodeFirstDatabase.TemplateType AS T
    ) AS T1");
        }
    }
}
