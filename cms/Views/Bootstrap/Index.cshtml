@using SquishIt.Framework
@using cms.Code.Bootstraper
<!DOCTYPE html>
<html ng-app="bootstrapApp">	
	<head>
		<title>@ViewBag.Title</title>

		@MvcHtmlString.Create(
			Bundle.JavaScript()
				.Add("~/Scripts/jquery-1.7.2.js")
				.Add("~/Scripts/angular.js")
				.Add("~/Scripts/angular-resource.js")
				.Add("~/Scripts/Coffee/Bootstrap.coffee")
				.Add("~/Scripts/Coffee/BootstrapApp.coffee")
				.Render("bootstrap_index#.js")
			)

	</head>
	
	 @helper VariablesGroup(string name,string id, string[] values){
	 	<text>
			<h3 ng-click="toggle('@id')">@name</h3>
			<div ng-show="toggleValue('@id')" ng-hide="!toggleValue('@id')">
				@values.List(
					@<text>@@@item<input ng-model="data.@item" /></text>
				)
			</div>
		</text>;
	 	
	 }


	<body>
	<div ng-controller="bootstrap">
		<link href="@Url.Content("/bootstrap/UserBootstrap?{{refreshtoken}}")" rel="stylesheet" type="text/css" />
		
		<!-- Navbar	================================================== -->
		
		<div class="navbar navbar-fixed-top">
			<div class="navbar-inner">
				<div class="container">
					<a class="brand" href="/Bootstrap">Bootstrap</a>
					<ul class="nav">
						<li><a href="#csstest">CSS test</a></li>
					</ul>
				</div>
			</div>
		</div>

		<br />
		<br />
		<br />
		<br />
	<br />
	

		<button ng-click="refresh()">refresh</button>
		<div class="span3">
			@VariablesGroup("Scaffolding", "scf", new[] { "bodyBackground", "textColor" })
			@VariablesGroup("Grays", "grs", new[] { "black","grayDarker","grayDark","gray","grayLight","grayLighter","white"})
			@VariablesGroup("Accent colors", "acol", new[] { "blue", "blueDark", "green", "red", "yellow", "orange", "pink", "purple" })
			@VariablesGroup("Links", "lnkss", new[] { "linkColor", "linkColorHover" })
		</div>
		<div class="span3">
			@VariablesGroup("Typography", "tpgr", new[] { "sansFontFamily","serifFontFamily","monoFontFamily","baseFontSize","baseFontFamily","baseLineHeight","altFontFamily","headingsFontFamily","headingsFontWeight","headingsColor", })
		</div>
		<div class="span3">
			@VariablesGroup("Tables", "tabls", new[] { "tableBackground", "tableBackgroundAccent", "tableBackgroundHover", "tableBorder" })
		</div>
		<div class="span3">
			@VariablesGroup("Buttons", "btn", new[] {"btnBackground","btnBackgroundHighlight","btnBorder","btnPrimaryBackground","btnPrimaryBackgroundHighlight","btnInfoBackground","btnInfoBackgroundHighlight","btnSuccessBackground","btnSuccessBackgroundHighlight","btnWarningBackground","btnWarningBackgroundHighlight","btnDangerBackground","btnDangerBackgroundHighlight","btnInverseBackground","btnInverseBackgroundHighlight"})
		</div>
		<div class="span3">
			@VariablesGroup("Forms", "frm", new[] { "inputBackground", "inputBorder", "inputBorderRadius", "inputDisabledBackground", "formActionsBackground" })
			@VariablesGroup("Dropdowns", "ldrp", new[] { "dropdownBackground", "dropdownBorder", "dropdownLinkColor", "dropdownLinkColorHover", "dropdownLinkBackgroundHover" })
			@VariablesGroup("Sprites", "lnks", new[] { "iconSpritePath", "iconWhiteSpritePath" })
			
		</div>
		<div class="span3">
			
			@VariablesGroup("Placeholder color", "plcc", new[] { "placeholderText" })
			@VariablesGroup("hr border color", "hrc", new[] { "hrBorder" })
			@VariablesGroup("Navbar", "navb", new[] { "navbarHeight","navbarBackground","navbarBackgroundHighlight","navbarText","navbarLinkColor","navbarLinkColorHover","navbarLinkColorActive","navbarLinkBackgroundHover","navbarLinkBackgroundActive","navbarSearchBackground","navbarSearchBackgroundFocus","navbarSearchBorder","navbarSearchPlaceholderColor","navbarBrandColor"})
			@VariablesGroup("Hero unit", "hrh", new[] { "heroUnitBackground","heroUnitHeadingColor","heroUnitLeadColor" })
			@VariablesGroup("Form states and alerts", "fa", new[] { "warningText","warningBackground","warningBorder","errorText","errorBackground","errorBorder","successText","successBackground","successBorder","infoText","infoBackground","infoBorder"})
			@VariablesGroup("Grid 940px", "grd99", new[] { "gridColumns", "gridColumnWidth", "gridGutterWidth", "gridRowWidth" })
			@VariablesGroup("Fluid grid", "fga", new[] { "fluidGridColumnWidth", "fluidGridGutterWidth" })
		</div>
		
		<br clear="all" />
		<button ng-click="refresh()">refresh</button>
     </div>

	 <div ng-view></div>
		
	</body>
</html>



