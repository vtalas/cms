@using Newtonsoft.Json.Linq
@using SquishIt.Framework
@using cms.Code.Bootstraper
<!DOCTYPE html>
<html ng-app="bootstrapApp" class=".main" data-modeldata="@Model">
<head>
	<title>@ViewBag.Title</title>
	@MvcHtmlString.Create(
			Bundle.JavaScript()
				.Add("~/Scripts/jquery-1.7.2.js")
				.Add("~/Scripts/angular.js")
				.Add("~/Scripts/angular-resource.js")
				.Add("~/Scripts/bootstrap.js")
				.Add("~/Scripts/Coffee/Bootstrap.coffee")
				.Add("~/Scripts/Coffee/BootstrapApp.coffee")
				.Add("~/Scripts/colorPicker_src.js")
				.Add("~/Scripts/jquery.modcoder.excolor.js")
				.Render("bootstrap_index#.js")
		)
</head>
@model Newtonsoft.Json.Linq.JObject
@helper xxx(string item)
	{
	<tr>
		<td>
			@@@item
		</td>
		<td title="{{data.@(item).value}}" ng-dblclick="aaa($event, data.@(item))" >
			<input ng-model="data.@(item).value " bootstrapelem="data.@item"  ng-change="test($event)" />
			&nbsp;&nbsp;&nbsp;
		</td>
	</tr>
}
@helper VariablesGroup(string name, string id, string[] values)
	{
	<text>
	<div style="float: left">
		<h3>@name</h3>
		@{
			const int count = 5;
			int len = values.Length / count;
			if (values.Length % count > 0) { len++; }
		}
		@for (int i = 0; i < len; i++)
  {
			<table style="float: left">
				@values.List(i, count, @<text>@xxx(item)</text>)
			</table>
  }
	</div>
	</text>;
	 	
}
@helper accordion(string name, string id, Func<dynamic, HelperResult> action)
	{
	<div class="accordion-group">
		<div class="accordion-heading">
			<a class="accordion-toggle" data-toggle="collapse" data-parent="#accordion2" href="#@id" >@name</a>
		</div>
		<div id="@id" class="accordion-body collapse" >
			<div class="accordion-inner clearfix">
				@action(null)
			</div>
		</div>
	</div>
}
<style>
	.accordion-group
	{
		background-color: white;
		position: relative;
		z-index: 999;
	}
	.color
	{
		width: 20px;
		border: 1px solid red;
	}
	#accordion2 {
		position: relative;
		width: 100%;
	}
	.xxx
	{
		position: fixed;
		top: 40px;
		width: 100px;
	}
	.aaa
	{
		cursor: pointer;
		background-color: white;
	}
	.colorPicker
	{
		width: 1em;
		cursor: pointer;
	}
</style>
<body>
	<div ng-controller="bootstrap" data-model="@Model">
		<link href="@Url.Content("/bootstrap/UserBootstrap?{{refreshtoken}}")" rel="stylesheet" type="text/css" />
		<!-- Navbar	================================================== -->
		<div class="navbar navbar-fixed-top">
			<div class="navbar-inner">
				<div class="container">
					<a class="brand" href="/Bootstrap">Bootstrap</a>
					<ul class="nav">
						<li><a ng-click="refresh()">refresh</a> </li>
						<li class="dropdown"><a class="dropdown-toggle" data-toggle="dropdown" href="#">Templates
							<b class="caret"></b></a>
							<ul class="dropdown-menu">
								<li><a href="#csstest">CSS test</a></li>
								<li><a href="#bootswatch">bootswatch</a></li>
							</ul>
						</li>
						<li class="dropdown"><a class="dropdown-toggle" data-toggle="dropdown" href="#">Download
							<b class="caret"></b></a>
							<ul class="dropdown-menu">
								<li><a href="kajbsdjkasd">bootastrap.css</a></li>
								<li><a href="kajbsdjkasd">bootastrap.min.css</a></li>
								<li class="divider"></li>
								<li><a href="kajbsdjkasd">bootastrap.less</a></li>
							</ul>
						</li>
					</ul>
				</div>
			</div>
		</div>
		<br />
		<br />
		<br />
		@*			<div ng-repeat="item in colorsrefonly">
				{{item.key}} {{item}}.......
			</div>
  <input type="text" class="colorPicker" value="#5bc0de"/>
  <input type="text" class="ccc" value="#5BC0de"/>
			{{data.bodyBackground.value}}
			<input ng-model="data.bodyBackground.value" class="cccc" />
*@
		<div class="xxx">
			<div class="accordion" id="accordion2">
				@accordion("Colors", "vv", @<text>
				@VariablesGroup("Scaffolding", "scf", new[] { "bodyBackground", "textColor", "linkColor", "linkColorHover" })
				@VariablesGroup("Grays", "grs", new[] { "black", "grayDarker", "grayDark", "gray", "grayLight", "grayLighter", "white" })
				@VariablesGroup("Accent colors", "acol", new[] { "blue", "blueDark", "green", "red", "yellow", "orange", "pink", "purple" })
				</text>)
				@accordion("Fonts", "tt", @<text>
				@VariablesGroup("Typography", "tpgr", new[] { "sansFontFamily", "serifFontFamily", "monoFontFamily", "baseFontSize", "baseFontFamily", "baseLineHeight", "altFontFamily", "headingsFontFamily", "headingsFontWeight", "headingsColor", })
				</text>)
				@accordion("Navigation", "nn", @<text>
				@VariablesGroup("Navbar", "navb", new[] { "navbarHeight", "navbarBackground", "navbarBackgroundHighlight", "navbarText", "navbarLinkColor", "navbarLinkColorHover", "navbarLinkColorActive", "navbarLinkBackgroundHover", "navbarLinkBackgroundActive", "navbarSearchBackground", "navbarSearchBackgroundFocus", "navbarSearchBorder", "navbarSearchPlaceholderColor", "navbarBrandColor" })
				</text>)
				@accordion("Buttons etc", "bbt", @<text>
				@VariablesGroup("Buttons", "btn", new[] { "btnBackground", "btnBackgroundHighlight", "btnBorder", "btnPrimaryBackground", "btnPrimaryBackgroundHighlight", "btnInfoBackground", "btnInfoBackgroundHighlight", "btnSuccessBackground", "btnSuccessBackgroundHighlight", "btnWarningBackground", "btnWarningBackgroundHighlight", "btnDangerBackground", "btnDangerBackgroundHighlight", "btnInverseBackground", "btnInverseBackgroundHighlight" })
				@VariablesGroup("Dropdowns", "ldrp", new[] { "dropdownBackground", "dropdownBorder", "dropdownLinkColor", "dropdownLinkColorHover", "dropdownLinkBackgroundHover", "dropdownDividerTop", "dropdownDividerBottom" })
				@VariablesGroup("Tables", "hagscdgh", new[] { "tableBackground", "tableBackgroundAccent", "tableBackgroundHover", "tableBorder" })
				</text>)
				@accordion("Forms, inputs", "ffi", @<text>
				@VariablesGroup("Form states and alerts", "fa", new[] { "warningText", "warningBackground", "warningBorder", "errorText", "errorBackground", "errorBorder", "successText", "successBackground", "successBorder", "infoText", "infoBackground", "infoBorder" })
				@VariablesGroup("Forms", "frm", new[] { "inputBackground", "inputBorder", "inputBorderRadius", "inputDisabledBackground", "formActionsBackground" })
				@VariablesGroup("Placeholder color", "plcc", new[] { "placeholderText", "hrBorder" })
				</text>)
				@accordion("Grid", "gg", @<text>
				@VariablesGroup("Hero unit", "hrh", new[] { "heroUnitBackground", "heroUnitHeadingColor", "heroUnitLeadColor" })
				@VariablesGroup("Grid 940px", "grd99", new[] { "gridColumns", "gridColumnWidth", "gridGutterWidth", "gridRowWidth" })
				@VariablesGroup("Fluid grid", "fga", new[] { "fluidGridColumnWidth", "fluidGridGutterWidth" })
				</text>)
				@accordion("Icons", "gg", @<text>
				@VariablesGroup("Sprites", "lnks", new[] { "iconSpritePath", "iconWhiteSpritePath" })
				</text>)
			</div>
		</div>
	</div>
	<div ng-view>
	</div>
	<script type="text/javascript">
		$(document).ready(
				function () {
					$('#accordion2').on('shown', function (e) {
						$(e.target).closest(".accordion-body").css("overflow", "visible");
						var grp = $(e.target).closest(".accordion-group");
						var grpTop = grp.position().top;
						$(this).stop(true, true).animate({ top: -grpTop }, 500);
					});
					$('#accordion2').on('show', function (e) {
						$(e.target).closest(".accordion-group").css("width", "1060px");
					});
					$('#accordion2').on('hide', function (e) {
						$(e.target).closest(".accordion-group").width("100px");
						$(e.target).closest(".accordion-body").css("overflow", "hidden");
					});
					$('#accordion2').on('hidden', function (e) {
						var opened = $(this).find(".accordion-body.in.collapse");
						if (opened.length == 0) {
							$(this).animate({ top: 0 }, 500);
						}
					});


				})
	</script>
</body>
</html>
